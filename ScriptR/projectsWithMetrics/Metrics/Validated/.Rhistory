geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize = 1.3,
axis.angle.x = 45,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 1.3,
axis.textsize.y = .8,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = .8,
axis.textsize.y = 1.3,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = .8,
axis.textsize.y = 2,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 1,
axis.textsize.y = 1.8,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
axis.textsize.y = 1.8,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
axis.textsize.y = 1.8,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5,
GeomText = .9)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
axis.textsize.y = 1.4,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = theme_bw())
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = theme_bw("538")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = theme_bw("538"))
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
axis.textsize.y = 1.4,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = theme_bw())
sjp.setTheme(
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
axis.textsize.y = 1.4,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = theme_bw())
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
axis.textsize.y = 1.4,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.grpfrq(geom.colors = theme_dark())
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
geom.label.color = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.grpfrq(geom.colors = theme_dark())
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
geom.label.color = "black",
axis.linecolor = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.grpfrq(geom.colors = theme_dark())
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
geom.label.color = "black",
axis.linecolor.x =  = "black",
axis.linecolor.y = "black",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.grpfrq(geom.colors = theme_dark())
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items )
sjp.setTheme(theme = "539",
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.grpfrq(geom.colors = theme_dark())
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.grpfrq(geom.colors = theme_dark())
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = "PRGn" )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = "Greys" )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = "Greys", intercept.line.color = "black")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = "Greys", intercept.line.color = "white")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = "Greys", intercept.line.color = "black", values = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = "Greys", intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = "RdGy", intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("red", "blue"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#000000", "blue"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.size = 0.4, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.size = 2, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", geom_line(geom.colors=("black")), value.labels = "sum.outside")
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", geom_line(geom.colors="black"), value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
geom.linetype = 1,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
geom.linetype = 3,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
geom.errorbar.linetype = 1 ,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
panel.gridcol = "black" ,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
plot.backcol = "white",
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
legend.inside = TRUE,
axis.textcolor = "black",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.inside = TRUE,
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
bottom
bottom
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.inside = TRUE,
legend.pos = "bottom right",
legend.pos =
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.inside = TRUE,
legend.pos = "bottom right",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
library(sjPlot)
require(ggplot2)
na.pad <- function(x,len){
x[1:len]
}
makePaddedDataFrame <- function(l,...){
maxlen <- max(sapply(l,length))
data.frame(lapply(l,na.pad,len=maxlen),...)
}
q1Yes = c(rep("2", 217))
q1No = c(rep("1", 105))
question1 = as.factor(c(q1Yes,q1No))
q2Yes = c(rep("2", 98))
q2No = c(rep("1", 225))
question2 = as.factor(c(q2Yes,q2No))
q3Yes = c(rep("2", 294))
q3No = c(rep("1", 37))
question3 = as.factor(c(q3Yes,q3No))
mydf= makePaddedDataFrame(list(question1=question1,question2=question2,question3=question3))
labels <- c("Disagree", "Agree")
items <- c("Do you agree with your PR being unmerged?", "Did the unmerged PR prevent or demotivate you to provide more PRs?", "Were the comments in the PR constructive?")
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.inside = TRUE,
legend.pos = "bottom right",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), barSpace = 0.2, intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), modelPlotSpace = 0.3, intercept.line.color = "black", value.labels = "sum.outside" )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
geom.spacing = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.inside = TRUE,
legend.pos = "bottom right",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.spacing = 0.3, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
grid.breaks	= 0.2,
legend.inside = TRUE,
legend.pos = "bottom right",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.spacing = 0.3,  grid.breaks	= 0.2, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, grid.breaks	= 0.2, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, grid.breaks = 0.2, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, expand.grid = FALSE, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, expand.grid = TRUE, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, expand.grid = FALSE, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", gridBreaksAt = 0.3, value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", gridBreaksAt = 0.9, value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", gridRange = 1.4 , value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", gridRange = .7 , value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.setTheme(base = theme_bw(),
geom.outline.color = "black",
axis.title.size = .7,
axis.textsize.x = 0.9,
geom.errorbar.size = 0.3,
geom.boxoutline.color = "black",
axis.textsize.y = 1.4,
axis.textcolor = "black",
legend.inside = TRUE,
legend.pos = "bottom right",
legend.title.size = .6,
geom.label.size = 5)
sjp.likert(mydf, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, printPlot = TRUE, legendLabels = labels, axisLabels.y = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", value.labels = "sum.outside" )
sjp.likert(mydf, legendLabels = labels, legendLabels = items, geom.colors = c("#787878", "#CECBCA"), intercept.line.color = "black", values = "sum.outside" )
library(effsize)
project_name = c("angular-js","bitcoin","bootstrap","caffe","d3","django","docker","flask","jenkins","joomla","jquery","laravel",
"mongo","opencv","rails","react","redis","scikit-learn","spring-framework","tensorflow","kubernetes")
for(i in 1:length(project_name)){
setwd("/Users/igorwiese/Dropbox/QuasiCasual/PR_Aceitos")
mergedPR<-read.csv2(paste(project_name[1],"StatisticsByPR.csv", sep=""), sep=";", header=FALSE)
setwd("/Users/igorwiese/Dropbox/QuasiCasual/projetosComMetricas/Metrics/Validado/")
unmergedPR<-read.csv2(paste(project_name[1],"Metrics.csv", sep=""), sep=";", header=TRUE)
name_project = project_name[i]
#filtrando caras com unmerged commit
unmergedPR = unmergedPR[which(unmergedPR$Did_CommitMerge==FALSE),]
comments_wilcoxon = wilcox.test(mergedPR$V4, unmergedPR$comments)
comments_effect = res = cliff.delta(mergedPR$V4, unmergedPR$comments,return.dm=TRUE)
comments_wilcoxon$p.value
comments_effect$estimate
comments_effect$magnitude
comments_review_wilcoxon = wilcox.test(mergedPR$V5, unmergedPR$coments_review)
comments_review_effect = cliff.delta(mergedPR$V5, unmergedPR$coments_review, return.dm=TRUE)
comments_review_wilcoxon$p.value
comments_review_effect$estimate
comments_review_effect$magnitude
commit_wilcoxon = wilcox.test(mergedPR$V6, unmergedPR$commit)
commit_effect = res = cliff.delta(mergedPR$V6, unmergedPR$commit,return.dm=TRUE)
commit_wilcoxon$p.value
commit_effect$estimate
commit_effect$magnitude
changed_files_wilcoxon = wilcox.test(mergedPR$V7, unmergedPR$changed_files)
changed_files_effect = res = cliff.delta(mergedPR$V7, unmergedPR$changed_files,return.dm=TRUE)
changed_files_wilcoxon$p.value
changed_files_effect$estimate
changed_files_effect$magnitude
add_lines_wilcoxon = wilcox.test(mergedPR$V8, unmergedPR$add_lines)
add_lines_effect = res = cliff.delta(mergedPR$V8, unmergedPR$add_lines,return.dm=TRUE)
add_lines_wilcoxon$p.value
add_lines_effect$estimate
add_lines_effect$magnitude
delete_lines_wilcoxon = wilcox.test(mergedPR$V9, unmergedPR$delete_lines)
delete_lines_effect = res = cliff.delta(mergedPR$V9, unmergedPR$delete_lines,return.dm=TRUE)
delete_lines_wilcoxon$p.value
delete_lines_effect$estimate
delete_lines_effect$magnitude
df = data.frame(name_project,comments_wilcoxon$p.value,comments_effect$estimate,comments_effect$magnitude,comments_review_wilcoxon$p.value,comments_review_effect$estimate,comments_review_effect$magnitude,commit_wilcoxon$p.value,commit_effect$estimate,commit_effect$magnitude,changed_files_wilcoxon$p.value,changed_files_effect$estimate,changed_files_effect$magnitude,add_lines_wilcoxon$p.value,add_lines_effect$estimate,add_lines_effect$magnitude,delete_lines_wilcoxon$p.value,delete_lines_effect$estimate,delete_lines_effect$magnitude)
colnames(df) <- c("Project", "Comments PValue", "Comments Cliffs","Comments Magnitude","Comments_Review PValue", "Comments_Review Cliffs","Comments_Review Magnitude","Commits PValue", "Commits Cliffs","Commits Magnitude","changed_files PValue", "changed_files Cliffs","changed_files Magnitude","add_lines PValue","add_lines Cliffs","add_lines Magnitude","delete_lines PValue","delete_lines Cliffs","delete_lines Magnitude")
df2 = data.frame(name_project,mergedPR$V4,unmergedPR$comments,mergedPR$V5, mergedPR$V6, unmergedPR$commit, unmergedPR$coments_review,mergedPR$V7, unmergedPR$changed_files,mergedPR$V8, unmergedPR$add_lines,mergedPR$V9, unmergedPR$delete_lines)
colnames(df) <- c("Project", "Comments Merged", "Comments unMerged","Comments Review Merged","Comments Review unMerged", "Commits Merged","Commits UnMerged","ChangedFiles Merged", "ChangedFiles UnMerged","AddedLines Merged","AddedLines UnMerged", "DeletedLines Merged","DeletedLines UnMerged")
setwd("/Users/igorwiese/Dropbox/QuasiCasual/")
write.table(df, file = "EffectSizeMeasuresBKP.csv", sep = ";", append = TRUE, row.names = FALSE, col.names=!file.exists("EffectSizeMeasures.csv"))
write.table(df2, file = "MetricsByProject.csv", sep = ";", append = TRUE, row.names = FALSE, col.names=!file.exists("MetricsByProject.csv"))
}
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
df2 = data.frame(name_project,mergedPR$V4, unmergedPR$comments, mergedPR$V5, unmergedPR$coments_review, mergedPR$V6, unmergedPR$commit, mergedPR$V7, unmergedPR$changed_files, mergedPR$V8, unmergedPR$add_lines, mergedPR$V9, unmergedPR$delete_lines)
colnames(df2) <- c("Project", "Comments Merged", "Comments unMerged","Comments Review Merged","Comments Review unMerged", "Commits Merged","Commits UnMerged","ChangedFiles Merged", "ChangedFiles UnMerged","AddedLines Merged","AddedLines UnMerged", "DeletedLines Merged","DeletedLines UnMerged")
mergedPR$V4
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
mean(unmergedPR$comments)
round(mean(unmergedPR$comments),2)
source('~/Dropbox/QuasiCasual/ScriptR/effect_size.R')
delete_lines_effect$estimate
mergedPR$V9
mean(mergedPR$V9)
mean(unmergedPR$delete_lines)
median(unmergedPR$delete_lines)
median(mergedPR$V9)
unmergedPR$delete_lines
delete_lines_effect$estimate
